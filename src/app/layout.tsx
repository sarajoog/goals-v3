import type { Metadata } from 'next'
import { Poppins } from 'next/font/google'
import '@styles/globals.css'
import Link from 'next/link'
import { ChartColumnBigIcon } from 'lucide-react'
import { ClerkProvider } from '@clerk/nextjs'
import ErrorBoundary from '@/components/error-boundary'
import AuthButtons from '@/components/auth-buttons'
import AuthRedirect from '@/components/auth-redirect'

const poppins = Poppins({
  weight: ['100', '200', '300', '400', '500', '600', '700', '800', '900'],
  variable: '--font-poppins',
  subsets: ['latin'],
})

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
  robots: {
    index: true,
    follow: true,
  },
  manifest: '/manifest.json',
  icons: {
    icon: '/icon.svg',
  },
}

export const viewport = {
  width: 'device-width',
  initialScale: 1,
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  return (
    <ClerkProvider
      publishableKey={process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
      appearance={{
        variables: {
          colorPrimary: '#000000',
        },
      }}
    >
      <html lang='en'>
        <head>
          <meta charSet='utf-8' />
          <meta name='theme-color' content='#000000' />
          <meta name='format-detection' content='telephone=no' />
          <meta name='color-scheme' content='light dark' />
          <link rel='icon' href='/icon.svg' type='image/svg+xml' />
        </head>
        <body className={`${poppins.variable} antialiased`}>
          <nav className='backdrop-blur-md bg-gray-50/98 dark:bg-slate-800/90 border-b border-gray-300/60 dark:border-slate-700/50 shadow-lg p-4 h-20 flex items-center justify-between'>
            <Link
              href='/'
              className='font-bold text-xl flex items-center gap-1 text-foreground hover:text-foreground/80 transition-colors'
              aria-label='Go to homepage'
            >
              <ChartColumnBigIcon
                className='text-emerald-600 dark:text-emerald-400'
                aria-hidden='true'
              />
              <span className='bg-gradient-to-r from-emerald-600 to-teal-600 dark:from-emerald-400 dark:to-teal-400 bg-clip-text text-transparent'>
                {process.env.NEXT_PUBLIC_APP_NAME}
              </span>
            </Link>
            <div>
              <AuthButtons />
            </div>
          </nav>
          <AuthRedirect />
          <ErrorBoundary>{children}</ErrorBoundary>
        </body>
      </html>
    </ClerkProvider>
  )
}
